<mxfile host="draw.maxant.ch" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36" version="26.0.7">
  <diagram name="Page-1" id="Zd5h04fM4v0t592Zn4om">
    <mxGraphModel dx="6380" dy="2913" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="8gTCPd0678HFJd0iT-Pa-184" value="Why do we lock keys?" style="verticalLabelPosition=middle;verticalAlign=top;html=1;shape=mxgraph.basic.rect;fillColor2=none;strokeWidth=1;size=20;indent=5;labelPosition=center;align=center;" vertex="1" parent="1">
          <mxGeometry x="937" y="954.5" width="403" height="503" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-1" value="bucket" style="rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="2.5" y="-80" width="367.5" height="390" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-9" value="database" style="rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="25" y="-45" width="335" height="335" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-3" value="table" style="rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="60" y="-10" width="220" height="250" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-1" value="objects" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="110" y="40" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-2" value="index-&amp;lt;name&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="110" y="150" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-6" value="index-&amp;lt;name&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="120" y="160" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-7" value="index-&amp;lt;name&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="130" y="170" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-8" value="A DSL is used to partially describe the schema when creating table, in that it can describe indices which should exist." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=10;verticalAlign=top;align=center;" parent="1" vertex="1">
          <mxGeometry x="-150" y="-10" width="130" height="110" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-11" value="library can have an API for caching and cache eviction. clients can integrate that using minio notifications. if they fail, all caches must be cleared!" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" parent="1" vertex="1">
          <mxGeometry x="-820" y="910" width="290" height="85" as="geometry" />
        </mxCell>
        <mxCell id="_BPiIGnPzIFbj7_7w4_a-14" value="transactions:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;a) use denormalised designs to avoid transactions, as described in mongodb docs&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;b) if you create or update or delete an object, the CUD of the related indexes is handled atomically in that we create a file containing all intentions, which is eventually consistent.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;" parent="1" vertex="1">
          <mxGeometry x="520" y="450" width="270" height="170" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-2" value="objects" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="120" y="50" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-3" value="objects" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="130" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-6" value="time" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#ffff88;strokeColor=#36393d;" vertex="1" parent="1">
          <mxGeometry x="-280" y="712" width="1740" height="20" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-78" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-7" target="8gTCPd0678HFJd0iT-Pa-77">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-150" y="1095" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-7" value="Start&lt;div&gt;Transaction&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-210" y="1125" width="110" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-8" value="Process 1" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="-389" y="1040" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-9" value="Process n, reading" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="-389" y="1355" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-10" value="Insert, Update, Delete" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=5;fontSize=20;" vertex="1" parent="1">
          <mxGeometry x="-389" y="975" width="219" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-12" value="Process m, writing" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="-389" y="1455" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-13" value="Tries to read with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-389" y="1395" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-14" value="Wants to write with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-380" y="1085" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-15" value="Insert" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-210" y="1017" width="1100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-17" value="Also wants to write with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-379" y="1505" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-19" value="Write intentions atomically" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="62.5" y="1125" width="187.5" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-20" value="Creates/Updates a single file in the transaction folder containing all the objects that need to be written, including index entries" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="82.25" y="1169" width="148" height="86" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-21" value="&lt;b&gt;&lt;u&gt;Folders&lt;/u&gt;&lt;/b&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;transactions/&amp;lt;timestamp8601&amp;gt;___&amp;lt;txid&amp;gt;/intentions.json&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;transactions/&amp;lt;timestamp8601&amp;gt;___&amp;lt;txid&amp;gt;/&amp;lt;db&amp;gt;/&amp;lt;table&amp;gt;/data/&amp;lt;pk&amp;gt;.json&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;transactions/&amp;lt;timestamp8601&amp;gt;___&amp;lt;txid&amp;gt;/&amp;lt;db&amp;gt;/&amp;lt;table&amp;gt;/indices/&amp;lt;field&amp;gt;/&amp;lt;prefix&amp;gt;/&amp;lt;db&amp;gt;___&amp;lt;table&amp;gt;___&amp;lt;pk&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;transactions/&amp;lt;timestamp8601&amp;gt;___&amp;lt;txid&amp;gt;/commit&lt;/li&gt;&lt;li&gt;transactions/&amp;lt;timestamp8601&amp;gt;___&amp;lt;txid&amp;gt;/rollback&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;lt;db&amp;gt;/&amp;lt;table&amp;gt;/data/&amp;lt;pk&amp;gt;.json&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&amp;lt;db&amp;gt;/&amp;lt;table&amp;gt;/indices/&amp;lt;field&amp;gt;/&amp;lt;prefix&amp;gt;/&amp;lt;db&amp;gt;___&amp;lt;table&amp;gt;___&amp;lt;pk&amp;gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=left;" vertex="1" parent="1">
          <mxGeometry x="-490" y="473.75" width="620" height="206.25" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-23" value="Write object file&lt;div&gt;in transaction folder&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="250" y="1125" width="340" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-44" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-25" target="8gTCPd0678HFJd0iT-Pa-53">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="416" y="1305" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-25" value="Writes object file to transaction folder.&lt;div&gt;&lt;div&gt;&lt;b&gt;Alternative 1a: &lt;/b&gt;insert:&amp;nbsp;Fails if object exists (see Process M below; if it exists, someone else beat us to it&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Alternative 1b: &lt;/b&gt;upsert: no failure if already exists, so long as the ETag matches existing. If no Etag is provided by the caller, treat it as an insert.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Alternative 1c:&lt;/b&gt;&amp;nbsp;update will fail if ETag doesn&#39;t match&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Alternative 1d: &lt;/b&gt;delete will fail if ETag doesn&#39;t match&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="252" y="1166" width="328" height="126" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-27" value="Write index files&lt;div&gt;in transaction folder&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="591" y="1125" width="159" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-29" value="See above" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-221" y="1179" width="109" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-41" value="Writes index entries to transaction folder.&lt;div&gt;&lt;b&gt;Alt 2:&amp;nbsp;&lt;/b&gt;Fails if entry exists (see Process M below)&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="579" y="1163" width="178" height="86" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-45" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-41" target="8gTCPd0678HFJd0iT-Pa-53">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="510" y="1255" as="sourcePoint" />
            <mxPoint x="1170" y="1175" as="targetPoint" />
            <Array as="points">
              <mxPoint x="668" y="1305" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-51" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-50" target="8gTCPd0678HFJd0iT-Pa-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-50" value="Timestamp in ISO-8601 format is used in transaction to know when one has timed out and needs deleting" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="-530" y="380" width="290" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-52" value="Commit" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="757" y="1125" width="93" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-53" value="Rollback" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="757" y="1285" width="93" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-59" value="Any time a CUD is done, we should check if the object / index is already in use within any transaction we can find. if it is, then fail fast - this is like an optimistic lock exception.&amp;nbsp; It ensures consistency! It ensures that changes were made based on the state that was read by the client, rather than some blind update" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-1130" y="1145" width="310" height="120" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-60" value="Not Found" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-210" y="1383" width="970" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-65" value="Would succeed,&amp;nbsp;&lt;div&gt;causing Process 1 to fail, see below&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-210" y="1470" width="270" height="51.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-66" value="1) Draw picture of what happens if a COMMITTED transaction needs to be recovered after a timeout" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-112" y="3400" width="290" height="85" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-67" value="Any technical failure during this process, e.g. unable to write, causes a rollback" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-72" y="1262" width="200" height="86" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-68" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-67" target="8gTCPd0678HFJd0iT-Pa-53">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="426" y="1265" as="sourcePoint" />
            <mxPoint x="780" y="1315" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-70" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-209" target="8gTCPd0678HFJd0iT-Pa-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-69" value="&lt;span style=&quot;text-align: left;&quot;&gt;intentions.json is used&amp;nbsp;&lt;/span&gt;to reduce the amount of time that a concurrent transaction like Process M can write before Process 1 does, thereby locking objects and index entries in preparation for a commit.&amp;nbsp;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="162.5" y="582.5" width="290" height="85" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-71" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-69" target="8gTCPd0678HFJd0iT-Pa-21">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="293" y="678" as="sourcePoint" />
            <mxPoint x="168" y="900" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-73" value="Optimistic Lock Exception - fails because a write is not possible because another object is already in the process of writing to that key, and the client needs to start from the new basis. If we wait til commit, the ETag will cause exactly this failure. So we can just do it now.&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Note: it will fail again if were to read and insert, since it would not see anything during the read!&lt;/span&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#e1d5e7;strokeColor=#9673a6;" vertex="1" parent="1">
          <mxGeometry x="65.75" y="1470" width="694.25" height="51.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-74" value="There is only one intentions file per TX because the pod that creates it has knowledge of everything happening in that transaction, in memory and so it can keep updating the file.&amp;nbsp; would it be cool to support distributed transactions where multiple services write to the same transaction? no, not necessary because we should use orchestration, long running transactions and other well known mechanisms." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-1360" y="960" width="460" height="105.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-75" value="Read other intention files" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-110" y="1125" width="180" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-76" value="Read other transactions in order to know what objects (keys) are locked.&amp;nbsp;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-80" y="1202" width="109" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-77" value="Transactions are started automatically if none is started by the application code. They are then immediately committed after the CUD operation in such cases." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=8;verticalAlign=top;align=center;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-130" y="1075" width="920" height="32.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-79" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-52" target="8gTCPd0678HFJd0iT-Pa-77">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-143" y="1135" as="sourcePoint" />
            <mxPoint x="-120" y="1105" as="targetPoint" />
            <Array as="points">
              <mxPoint x="804" y="1095" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-80" value="inconsistency window" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#fff2cc;strokeColor=#d6b656;fontStyle=2" vertex="1" parent="1">
          <mxGeometry x="962" y="2113.5" width="280" height="21" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-81" value="Copy all objects in Transaction&lt;div&gt;to target folders&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="963" y="2152" width="280" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-82" value="Delete transaction folder" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="1233" y="2152" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-83" value="" style="ellipse;html=1;shape=endState;fillColor=strokeColor;" vertex="1" parent="1">
          <mxGeometry x="1453" y="2157" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-84" value="&lt;div&gt;&lt;b&gt;Alt 3:&amp;nbsp;&lt;/b&gt;Fails if files already exist.&lt;/div&gt;&lt;div&gt;&lt;b&gt;Alt 4:&lt;/b&gt;&amp;nbsp;if a failure occurs, then the transaction folder can be used to recover, by attempting to complete.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="962" y="2187" width="300" height="86" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-85" value="Commit" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="757" y="2152" width="93" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-163" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-206" target="8gTCPd0678HFJd0iT-Pa-159">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1060" y="2530" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-87" value="Rollback" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="757" y="2526" width="93" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-88" value="Write commit file&lt;div&gt;in TX folder&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="847" y="2152" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-89" value="Used during recovery to&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;complete the transaction&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;if possible&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="836" y="2186" width="114" height="86" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-90" value="Partial find, depending on how&lt;div&gt;it&#39;s searched for, when&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="963" y="2282" width="274" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-91" value="Consistent" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="1233" y="2283" width="244" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-92" value="Not Found" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="830" y="2595" width="647" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-94" value="See below" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="847" y="1130" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-95" value="See below" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="847" y="1290" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-96" value="Process n, reading" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="560" y="2272" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-97" value="Process m, writing" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="556" y="2333" width="164" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-98" value="Tries to read with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="560" y="2293" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-99" value="Also wants to write with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="558" y="2358" width="169" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-100" value="Process 1" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="560" y="2146" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-101" value="Commit" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=5;fontSize=20;" vertex="1" parent="1">
          <mxGeometry x="-391" y="2026" width="219" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-102" value="Has written with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="560" y="2169" width="131" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-106" value="Start&lt;div&gt;Transaction&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-198" y="814" width="98" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-107" value="Since there are many files to write, we create an internal transaction, simply create a uuid in memory, not yet peristed" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-209" y="902" width="109" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-108" value="Start Transaction" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=5;fontSize=20;" vertex="1" parent="1">
          <mxGeometry x="-391" y="740" width="219" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-109" value="Process 1" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="-386" y="800" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-110" value="Wants to start a transaction" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-377" y="845" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-111" value="Then see below..." style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-99.5" y="820" width="109" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-112" value="Commit" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="742" y="2056" width="740" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-113" value="Start&lt;div&gt;Transaction&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-219" y="760" width="139" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-114" value="Recovery" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-170" y="2983" width="1650" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-115" value="2) Describe the recovery process, used if a transaction is found that is out of date, either by the pod that started it, or a different pod that is doing background maintenance. WHEN THE TX IS NOT COMMITTED" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="232.13" y="3400" width="286" height="100" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-116" value="Read" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="-120" y="1592.5" width="656" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-117" value="Read" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=5;fontSize=20;" vertex="1" parent="1">
          <mxGeometry x="-390" y="1592.5" width="219" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-118" value="Read from&lt;div&gt;in-memory cache&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-117.5" y="1680.5" width="180" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-119" value="Check if Key X is already known to the cache, either because of a previous write, or because of a previous read.&lt;div&gt;Do this, since we support repeatable reads and if we already know the state, we don&#39;t need to read it from the store.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-131.5" y="1731.5" width="201.5" height="118.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-124" value="Process 1" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="-386" y="1657.5" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-126" value="Other transactions find no results related to the transaction of process one, because all it&#39;s data is written to a separate transaction folder." style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-100" y="1413" width="770" height="31" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-127" value="Do we need to store what has been read, because it can be used to lock those rows? no =&amp;gt; MVCC says read a version from before the TX and use it repeatedly. I interpret from that, that if it is then used to write, it should break the TX, because it is an old version.&amp;nbsp;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-820" y="1759.5" width="290" height="120.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-128" value="Read with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-375" y="1701.5" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-129" value="Your Application" style="shape=module;align=left;spacingLeft=20;align=center;verticalAlign=top;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-182.12" y="-350" width="278" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-130" value="Abstrastore&lt;div&gt;Library&lt;/div&gt;" style="shape=module;align=left;spacingLeft=20;align=center;verticalAlign=top;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-82.12" y="-282" width="100" height="50" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-132" value="Minio / S3" style="shape=module;align=left;spacingLeft=20;align=center;verticalAlign=top;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="208.13" y="-370" width="278" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-135" value="Minio / S3" style="shape=module;align=left;spacingLeft=20;align=center;verticalAlign=top;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="222.13" y="-356" width="278" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-136" value="Minio / S3" style="shape=module;align=left;spacingLeft=20;align=center;verticalAlign=top;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="236.13" y="-343" width="278" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-137" value="REST" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=10;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-130" target="8gTCPd0678HFJd0iT-Pa-135">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-138" value="On this side of the world, Minio or S3 deals with consistency between multiple node / disks." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=11;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="560" y="-300" width="170" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-139" value="On this side of the world, Abstrastore deals with isolation and consistency using an MVCC algorithm which is able to provide repeatable read isolation to transactions." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=11;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="-410" y="-300" width="170" height="120" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-140" value="As with stores like MongoDB, prefer denormalisation to model parent-child relationships, rather than using transactions to gain consistency. The reason for this is that you are using an object store!&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Abstrastore however still provides transactions over multiple objects, optimistic locking, repeatable read isolation, etc.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You also get all the other benefits of S3/Minio like retention, auditing (versioning), replication, backup, etc.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=10;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="400" y="60" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-141" value="Reads are repeatable because each transaction takes a copy of what it reads." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=13;verticalAlign=top;align=center;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1510" y="2317" width="300" height="50" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-142" value="Not Found" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="760" y="2282" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-145" value="Optimistic Lock Exception - see above" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#e1d5e7;strokeColor=#9673a6;" vertex="1" parent="1">
          <mxGeometry x="760" y="2333" width="720" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-146" value="Process 1" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="560" y="2526" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-147" value="Has written with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="560" y="2547" width="131" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-148" value="Process n, reading" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="561" y="2585" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-149" value="Process m, writing" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="557" y="2646" width="164" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-150" value="Tries to read with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="561" y="2606" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-151" value="Also wants to write with Key X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="559" y="2671" width="169" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-152" value="Optimistic Lock Exception - see above" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#e1d5e7;strokeColor=#9673a6;" vertex="1" parent="1">
          <mxGeometry x="830" y="2655" width="653" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-154" value="Inconsistency refers to the fact that an index might still be temporarily out of date after the object is written." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=13;verticalAlign=top;align=center;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1510" y="2254" width="300" height="50" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-155" value="Complete" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1483" y="2156.5" width="67" height="29.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-156" value="Rollback" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="745" y="2455" width="740" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-157" value="Rollback" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=5;fontSize=20;" vertex="1" parent="1">
          <mxGeometry x="-397" y="2421" width="219" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-159" value="Delete transaction folder" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="1237" y="2526" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-160" value="" style="ellipse;html=1;shape=endState;fillColor=strokeColor;" vertex="1" parent="1">
          <mxGeometry x="1457" y="2531" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-161" value="Complete" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1487" y="2530.5" width="67" height="29.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-164" value="&quot;write&quot; is a synonym for CUD, is a synonym for Create, Update, Delete" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-760" y="1057" width="290" height="63" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-165" value="If not found: ListObjects with prefix = path and find&lt;div&gt;version that is lower than tx start. Store it in the TX cache.&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="80" y="1680.5" width="350" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-166" value="In order to provide &quot;snapshot isolation&quot;, find the version of the object that existed before the transaction started.&lt;div&gt;That way, we use the version of objects that existed before other concurrent transactions committed changes to them.&amp;nbsp; This is correct for reading.&amp;nbsp; If they are read in order to be updated, the update will fail due to the ETag mismatch, which is correct in terms of optimistic locking failure.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="139.25" y="1731.5" width="210.75" height="178.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-167" value="Note all versions that are too old to now be relevant, and delete them asynchronously.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Alternative: make a note of what paths to clean when writing second version onwards? does the writer get that info? or just add a note to the cleanup folder, that a key was written and could have multiple versions...&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="130" y="1910" width="242.5" height="150" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-168" value="Return&lt;div&gt;result&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="440" y="1680.5" width="90" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-169" value="What happens to objects that have been read, if they are written by other transactions?&amp;nbsp; Nothing unless they are then used to update/delete.&amp;nbsp; It is correct that the current transaction only sees the version that existed before the transaction, according to MVCC.&amp;nbsp; If a write operation is then attempted it will fail, because the ETag of the version read will not be the latest, and an optimistic lock exception will result." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="-468" y="1850" width="290" height="150" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-170" value="What happens to objects that have been read, if they are read by other transactions?&amp;nbsp; Nothing, they are not affected." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="-468" y="1767" width="290" height="70" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-171" value="Recovery" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=5;fontSize=20;" vertex="1" parent="1">
          <mxGeometry x="-403" y="2963" width="219" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-174" value="Start&lt;div&gt;Transaction&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-172" y="3023" width="98" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-175" value="Commit" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="760" y="3023" width="93" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-176" value="Rollback" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="760" y="3870" width="93" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-177" value="This diagram describes what happens if the process that starts a transaction dies.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It describes what happens after the configured timeout.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-401" y="3043" width="171" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-180" value="If you are the first one to try and write, that doesn&#39;t mean it will work, we need to check if the ID is reserved, but also if the ETag they are providing is the latest. if not, optimistic lock exception!" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-450" y="1240" width="295" height="90" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-183" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-181" target="8gTCPd0678HFJd0iT-Pa-182">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-181" value="&lt;div&gt;&lt;a href=&quot;https://learning-notes.mistermicheels.com/data/sql/optimistic-pessimistic-locking-sql/&quot;&gt;Optimistic Locking&lt;/a&gt;&lt;/div&gt;&lt;div&gt;UPDATE &lt;i&gt;table&lt;/i&gt;&lt;/div&gt;&lt;div&gt;SET &lt;i&gt;field&lt;/i&gt; = &#39;f&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; version = version + 1&lt;/div&gt;&lt;div&gt;WHERE id = 1 AND version = 1&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If update count is not 1, rollback.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note: this statement locks the row when the isolation level is higher than READ UNCOMMITTED, and we are trying to achieve that.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=7;verticalAlign=top;align=left;" vertex="1" parent="1">
          <mxGeometry x="1030" y="1005" width="200" height="190" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-182" value="So with two concurrent transactions that start with the same version,&amp;nbsp;the first that executes the update statement will lock the row. That causes the second one to always fail as it cannot commit before the first transaction either completes or rolls back.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Now assume that the goal of every transaction is to &lt;i&gt;not&lt;/i&gt;&amp;nbsp;rollback. Every second transaction will fail, if the first does not rollback. So we assume it will fail and abort fast, using an optimistic lock exception to signal that in all likelihood, that second transaction will fail.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;We don&#39;t use blocking to cause the caller to wait, rather let the caller decide when to retry. With knowledge of the transaction which has locked the key, we can inform the user about when the latest time is that the key will be writable.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;" vertex="1" parent="1">
          <mxGeometry x="950" y="1214" width="370" height="230" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-185" value="&lt;span style=&quot;&quot;&gt;The framework will remove the transaction folder, effectively rolling back any changes.&lt;/span&gt;&lt;div style=&quot;&quot;&gt;Other processes that have failed because they start after this transaction but need to write an object with a key that is reserved, will have to wait until this happens.&lt;/div&gt;" style="shape=partialRectangle;whiteSpace=wrap;html=1;right=0;top=0;bottom=0;fillColor=none;routingCenterX=-0.5;align=left;verticalAlign=bottom;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="-167.5" y="3090" width="330" height="100" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-186" value="&lt;div style=&quot;&quot;&gt;Once the commit file is written, the transaction will be completed. Until that happens, the locks will exist.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;If the process running the original transaction fails to do this, but doesn&#39;t die, it will keep trying and will use the callback to alert the application of the problem, e.g. a lack of storage space or connectivity problems.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;If the process running the original transaction dies, other processes will take over and try to complete the transaction by moving the files to the final location. If they fail, they too will keep trying and alert the application.&lt;/div&gt;" style="shape=partialRectangle;whiteSpace=wrap;html=1;right=0;top=0;bottom=0;fillColor=none;routingCenterX=-0.5;align=left;verticalAlign=bottom;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="849" y="3096" width="330" height="204" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-187" value="Copy all objects in Transaction&lt;div&gt;to target folders&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="963" y="3023" width="280" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-188" value="Delete transaction folder" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="1233" y="3023" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-189" value="" style="ellipse;html=1;shape=endState;fillColor=strokeColor;" vertex="1" parent="1">
          <mxGeometry x="1453" y="3028" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-190" value="Write commit file&lt;div&gt;in TX folder&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="847" y="3023" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-191" value="Complete" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1483" y="3027.5" width="67" height="29.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-192" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=-0.004;entryY=0.059;entryDx=0;entryDy=0;entryPerimeter=0;exitX=-0.001;exitY=0.177;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-185" target="8gTCPd0678HFJd0iT-Pa-186">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="499" y="3108" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-193" value="add alert handling to lib" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="561" y="3440" width="169" height="45" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-194" value="From here on (to the right) other processes will start to see the results of the transaction. E.g. they might be able to read an object using its key, but not yet using an index.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Any process that is recovering and completing the transaction will be able to simply upsert the object, because the lock is still held by the transaction and so it can assume that it has the right to update to the state that is recorded in the transaction.&lt;/div&gt;" style="shape=partialRectangle;whiteSpace=wrap;html=1;right=0;top=0;bottom=0;fillColor=none;routingCenterX=-0.5;align=left;verticalAlign=bottom;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="973.5" y="3300" width="246.5" height="180" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-195" value="all moves should be executed in parallel to speed up the execution and minimise the inconsistency window." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="1017.25" y="3620" width="169.5" height="100" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-196" value="From here on (to the right) the transaction is effectively committed and the framework simply needs to remove the outdated transaction files." style="shape=partialRectangle;whiteSpace=wrap;html=1;right=0;top=0;bottom=0;fillColor=none;routingCenterX=-0.5;align=left;verticalAlign=bottom;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="1225" y="3302" width="246.5" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-197" value="check the logic here. i wrote somewhere else that ETags will be respected, but here i don&#39;t give a damn.&amp;nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;if someone else did manage to update, and used a different etag that&#39;d be shite.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="920" y="3500" width="327.75" height="100" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-198" value="do processes that are recovering, need to write a lock file to say that they are doing so? if they dont then the etag will be updated and another recoverer will get errors and be very confused.&amp;nbsp;&amp;nbsp;&lt;div&gt;perhaps instead of using etags they should just read and check all bytes are the same?&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="909.25" y="3740" width="327.75" height="120" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-199" value="Delete transaction folder" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="1237" y="3870" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-200" value="" style="ellipse;html=1;shape=endState;fillColor=strokeColor;" vertex="1" parent="1">
          <mxGeometry x="1457" y="3875" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-201" value="Complete" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1487" y="3874.5" width="67" height="29.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-202" value="&lt;div&gt;Once the rollback file is written, the transaction will be rolled back. Until that happens, the locks will exist.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;From here on to the right:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the process running the original transaction fails to delete the transaction folder, but doesn&#39;t die, it will keep trying and will use the callback to alert the application of the problem, e.g. connectivity problems.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If the process running the original transaction dies, other processes will take over and try to rollback the transaction by deleting the transaction folder. If they fail, they too will keep trying and alert the application.&lt;/div&gt;" style="shape=partialRectangle;whiteSpace=wrap;html=1;right=0;top=0;bottom=0;fillColor=none;routingCenterX=-0.5;align=left;verticalAlign=bottom;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="950" y="3920" width="540" height="190" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-205" value="Migrations - when starting, read the version file to see what version is &quot;deployed&quot; and if it is lower than a file in the migrations folder of the app, then write a lock file with the hostname using an etag to ensure it is only written if not previously there (ensuring only one pod will do the migration), then migrate and write the version file and remove the lock file.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;any process which attempts to lock and fails should iterate with a backoff strategy until the migration is complete.&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;all processes must block on this migration process, stopping the application from starting until the migration is complete.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-880" y="2048.5" width="310" height="241.5" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-206" value="Write rollback file&lt;div&gt;in TX folder&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="840" y="2526" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-207" value="Write rollback file&lt;div&gt;in TX folder&lt;/div&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="843" y="3870" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-208" value="we could optimise this and as soon as any rollback file exists, any running process can try to delete it. That way, locks will be removed asap, rather than waiting for a timeout." style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="1020" y="4130" width="220" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-210" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=none;startFill=0;" edge="1" parent="1" source="8gTCPd0678HFJd0iT-Pa-69" target="8gTCPd0678HFJd0iT-Pa-209">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="295" y="668" as="sourcePoint" />
            <mxPoint x="162" y="1125" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-209" value="if writing the intentions.json file fails due to an etag failure, then the call to CUD will re-read it and re-merge the current CUD and try and re-write the file. this allows for the process to do stuff concurrently.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;IS THIS GOOD? yes, if we document that it would&#39;t be a good idea to attempt to update the same object from multiple &quot;threads&quot;, as the last one will win. ONLY use concurrent CUDs if they affect different keys.&lt;/div&gt;" style="shape=note2;boundedLbl=1;whiteSpace=wrap;html=1;size=15;verticalAlign=top;align=center;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="95.88000000000011" y="765" width="243" height="210" as="geometry" />
        </mxCell>
        <mxCell id="8gTCPd0678HFJd0iT-Pa-211" value="Failure to create the rollback file will lead to a timeout, as documented to the left and up." style="shape=partialRectangle;whiteSpace=wrap;html=1;right=0;top=0;bottom=0;fillColor=none;routingCenterX=-0.5;align=left;verticalAlign=bottom;strokeWidth=2;" vertex="1" parent="1">
          <mxGeometry x="843" y="3920" width="97" height="100" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
